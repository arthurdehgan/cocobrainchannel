#N canvas 592 134 559 540 10;
#X obj 2 209 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 2 431 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 2 480 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 75 438 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 330 184 bng 15 250 50 0 empty empty empty 0 -6 0 10 -228856
-1 -1;
#X obj 75 459 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X obj 2 512 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 219 121 bng 22 250 50 0 empty bng_play empty 17 7 0 10 -216373
-66577 -1;
#X obj 263 185 midiout;
#X text 142 214 bang;
#X text 136 230 float;
#X obj 2 4 cnv 15 553 42 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X text 191 123 Play;
#X obj 219 185 print;
#X obj 75 217 cnv 17 3 210 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 189 461 sent at the end of a sequence (useful for looping)
;
#X text 133 245 append -;
#X text 188 245 records at the end of the stored sequence, f 59;
#X text 91 260 delay <float> -;
#X text 96 276 hook <float> -;
#X text 188 260 onset time in ms of the first event, f 59;
#X text 138 439 float -;
#X text 144 460 bang -;
#X text 116 488 1) symbol -;
#X msg 255 125 stop;
#X text 176 230 - raw MIDI data stream to be recorded, f 61;
#X text 188 276 multiplies all the event times by the given number
(even when playing), f 59;
#X text 189 439 raw MIDI data stream from played sequence;
#N canvas 447 157 813 469 basic 0;
#X obj 133 319 cyclone/midiparse;
#X obj 162 149 tgl 22 0 empty empty empty 17 7 0 10 -216373 -66577
-1 0 1;
#X msg 169 216 stop;
#X obj 133 220 bng 17 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X text 192 151 play/stop;
#X obj 133 291 cyclone/midiflush;
#X msg 243 249 bang;
#X text 277 244 flush hanging;
#X text 279 258 MIDI notes;
#X obj 488 296 cyclone/seq;
#X msg 505 234 record;
#X obj 488 197 midiin;
#X obj 632 174 notein;
#X obj 632 224 cyclone/midiformat;
#X obj 632 198 pack;
#X obj 632 304 cyclone/seq;
#X msg 515 265 play;
#X obj 162 181 select 1 0;
#X obj 67 154 loadbang;
#X msg 243 212 read;
#X text 249 192 open another;
#X text 279 213 file;
#X msg 445 236 write;
#X text 414 21 You can directly record from raw MIDI data with [midiin].
Use the 'record' message to start recodring \, you don't need the stop
message to switch from recording and playing.;
#X text 416 116 You can record from specialized MIDI objects such as
[notein] using the [midiformat] object to convert the messages to raw
MIDI.;
#X msg 662 251 record;
#X msg 676 276 play;
#X obj 488 396 cyclone/midiparse;
#X obj 631 395 cyclone/midiformat;
#X obj 562 432 cyclone/midiflush;
#X text 242 368 synthesizer;
#N canvas 638 210 345 266 polysynth 0;
#X obj 65 20 inlet;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 41 151 pd synth;
#X obj 65 84 pack f f f;
#X obj 100 207 outlet~;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 100 151 pd synth;
#N canvas 667 245 370 323 synth 0;
#X obj 234 124 / 127;
#X obj 219 204 *~;
#X obj 81 134 phasor~;
#X obj 81 102 mtof;
#X obj 81 31 inlet;
#X obj 219 273 outlet~;
#X obj 81 70 unpack float float;
#X obj 234 174 vline~;
#X msg 234 149 \$1 50;
#X obj 81 162 cyclone/triangle~ 0.9;
#X obj 219 236 /~ 3;
#X connect 0 0 8 0;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 6 0 3 0;
#X connect 6 1 0 0;
#X connect 7 0 1 1;
#X connect 8 0 7 0;
#X connect 9 0 1 0;
#X connect 10 0 5 0;
#X restore 161 152 pd synth;
#X text 124 19 3-voice polyphonic synth;
#X obj 65 115 route 1 2 3, f 18;
#X obj 65 52 poly 3 1;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 3 0;
#X connect 7 0 1 0;
#X connect 7 1 4 0;
#X connect 7 2 5 0;
#X connect 8 0 2 0;
#X connect 8 1 2 1;
#X connect 8 2 2 2;
#X restore 133 352 pd polysynth;
#X text 214 352 <= 3 voice polyphonic;
#X msg 67 179 read seq.mid;
#X obj 113 389 ./out~;
#X text 424 345 Please check the help file of [midiparse] \, [midiformat]
and [midiflush] \, which are useful with [seq].;
#X text 23 21 Below \, we play and stop with a toggle. At the end of
the file \, a bang out the 2nd outlet of [seq] makes it play again
in a loop. When you stop it with the toggle \, it also flushes possible
hanging MIDI notes (with [midiflush]). We use [midiparse] to send note
messages to our synth.;
#X text 415 77 Use 'write' to save to a MIDI file with the dialog box
\, or use 'write <symbol>' to save to a specific file.;
#X msg 29 222 delay 500;
#X text 25 87 Use the 'read' message to open another file with the
dialog box and 'read seq.mid' to re open the example. The 'delay' message
adds a delay in ms before sending the fisrt event.;
#X obj 133 251 cyclone/seq;
#X connect 0 0 31 0;
#X connect 1 0 17 0;
#X connect 2 0 40 0;
#X connect 3 0 40 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 10 0 9 0;
#X connect 11 0 9 0;
#X connect 12 0 14 0;
#X connect 12 1 14 1;
#X connect 13 0 15 0;
#X connect 14 0 13 0;
#X connect 16 0 9 0;
#X connect 17 0 3 0;
#X connect 17 1 2 0;
#X connect 17 1 6 0;
#X connect 18 0 33 0;
#X connect 19 0 40 0;
#X connect 22 0 9 0;
#X connect 25 0 15 0;
#X connect 26 0 15 0;
#X connect 31 0 34 0;
#X connect 31 0 34 1;
#X connect 33 0 40 0;
#X connect 38 0 40 0;
#X connect 40 0 5 0;
#X connect 40 1 3 0;
#X restore 492 157 pd basic;
#X text 351 185 <= when finished;
#X text 137 303 print -;
#X text 188 303 prints the first 16 events of the sequence in the Pd
Window;
#X text 89 349 start <float> -;
#X text 89 318 read <symbol> -;
#X text 83 410 write <symbol> -;
#X text 131 334 record -;
#X text 143 377 stop -;
#X text 143 393 tick -;
#X text 188 334 starts recording raw MIDI received in the inlet, f
59;
#X text 188 393 external clock \, needed after 'start -1' message,
f 59;
#X text 188 410 saves to a MIDI file (no symbol opens a dialog box)
, f 59;
#X text 188 319 reads from a MIDI file (no symbol opens a dialog box)
, f 59;
#X text 176 214 - starts or restarts playing a sequence at normal speed
, f 61;
#X text 188 349 start/restart sequence at a given tempo (default '1024'
- normal tempo) \, 'start -1' expects tick messages, f 59;
#X text 191 488 a MIDI file to be loaded;
#X obj 17 57 cyclone/comment 0 18 times ? 0 0 0 0 MIDI sequencer;
#X obj 16 4 cyclone/comment 0 37 times ? 0 0 0 0 seq;
#X obj 322 28 cyclone/comment 0 13 courier ? 0 224 228 220 Objects
cloned from Max/MSP;
#X obj 363 4 cyclone/comment 0 24 courier ? 0 224 228 220 cyclone;
#X text 188 377 stops recording/playing and goes back to start, f
59;
#X text 66 86 [seq] plays/records raw MIDI streams and can save/read
MIDI sequence files. All tracks of a multi-track midi file are merged
into one.;
#N canvas 680 158 447 497 start 0;
#X msg 84 335 start -1;
#X obj 166 355 metro;
#X msg 166 379 tick;
#X obj 166 421 cyclone/seq seq.txt;
#X obj 166 332 tgl 15 0 empty empty empty 17 7 0 10 -228856 -1 -1 1
1;
#X obj 166 291 loadbang;
#X obj 166 451 s \$0-midi;
#X text 31 23 The 'start' message starts reading the loaded sequence
and also allows you to control the playback speed \, set by the float
after the 'start' message - the normal speed is set as 'start 1024'
\, so 'start 512' is half the tempo (reads two times slower) \, 'start
2048' is twice the tempo (two times faster) and so on. If you send
it just "start" \, it plays at the original speed (so it's the same
as the bang message or 'start 1024').;
#X text 33 133 Note that the 'start' message can only set the speed
once (at the start of the sequence) - because every time we send the
start message \, it starts playing from the start! Thus \, a bang or
a 'start' message can also be used to 'restart' the sequence.;
#X obj 218 389 nbx 7 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 20.8333 256;
#X obj 218 362 expr 60000 / ($f1 * 24);
#X text 33 204 When you send it "start -1" \, it expects 'tick' messages
as the clock \, so you can use it to vary the playback tempo or to
synchronize with another clock (such as incoming MIDI Clock messages).
24 clock ticks is a quarter note \, you can convert BPM to time per
clock tick;
#X text 46 334 play:;
#X text 293 382 tick time in ms, f 9;
#X msg 218 322 120;
#X obj 218 343 nbx 3 14 30 240 0 0 empty empty empty 0 -8 0 10 -228856
-1 -1 120 256;
#X text 286 342 BPM;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 6 0;
#X connect 4 0 1 0;
#X connect 5 0 4 0;
#X connect 5 0 14 0;
#X connect 9 0 1 1;
#X connect 10 0 9 0;
#X connect 14 0 15 0;
#X connect 15 0 10 0;
#X restore 492 179 pd start;
#X obj 219 156 cyclone/seq seq.mid;
#X connect 7 0 55 0;
#X connect 27 0 55 0;
#X connect 55 0 8 0;
#X connect 55 0 16 0;
#X connect 55 1 4 0;
